[sources.aws_kinesis_firehose]
title = "AWS Kinesis Firehose"
noun = "AWS Kinesis Firehose"
beta = true
common = false
delivery_guarantee = "at_least_once"
<%= render("_partials/descriptions/_aws_kinesis_firehose.toml") %>
features = [
  "Accepts events forwarded by AWS Kinesis Firehose over HTTP.",
  "Agnostic to data formats; can be used to ingest forwarded CloudWatch Log events, arbitrary JSON, text, or more.",
  "Optionally require authentication on all requests.",
]
function_category = "receive"
output_types = ["log"]
requirements.network_port = "80"
service_providers = ["AWS"]
strategies = ["service"]
through_description = "the [AWS Kinesis Firehose HTTP protocol][urls.aws_kinesis_firehose_http_protocol]"

<%= render("_partials/fields/_component_options.toml", type: "source", name: "aws_kinesis_firehose") %>

[sources.aws_kinesis_firehose.options.address]
type = "string"
common = true
default = "0.0.0.0:80"
description = """\
The address to accept connections on.\
"""

[sources.aws_kinesis_firehose.options.access_key]
type = "string"
common = true
examples = ["A94A8FE5CCB19BA61C4C08"]
description = """\
AWS Kinesis Firehose can be configured to pass along an access key to \
authenticate requests. If configured, `access_key` should be set to the same \
value. If not specified, vector will treat all requests as authenticated. \
"""

[[sources.aws_kinesis_firehose.examples]]
label = "AWS CloudWatch Logs Subscription"
body = """\
Given the following input, which contains events forwarded by an [AWS CloudWatch
\ Logs Subscription][urls.aws_cloudwatch_logs_subscription_firehose]:

```json title="AWS Firehose request"
{
  "requestId": "ed1d787c-b9e2-4631-92dc-8e7c9d26d804",
  "timestamp": 1600110760138,
  "records": [
    {
      "data": "H4sIABk1bV8AA52TzW7bMBCE734KQ2db/JdI3QzETS8FAtg91UGgyOuEqCQq5Mqua+TdS8lu0hYNUpQHAdoZDcn9tKfJdJo0EEL5AOtjB0kxTa4W68Xdp+VqtbheJrPB4A4t+EFiv6yzVLuHa+/6blARAr5UV+ihbH4vh/4+VN52aF37wdYIPkTDlyhF8SrabFsOWhIrtz+Dlnto8dV3Gp9RstshXKhMi0xpqk3GpNJccpFRKYw0WvCM5kIbzrVWipm4VK55rrSk44HGHLTx/lg2wxVYRiljVGWGCvPiuPRn2O60Se6P8UKbpOBZrulsk2xLhCEjljYJk2QFHeGU04KxQqpCsumcSko3SfQ+uoBnn8pTJmjKWZYyI0axAXx021G++bweS5136CpXj8WP6/UNYek5ycMOPPhReETsQkHI4XBIO2/bynZlXXkXwryrS9w536TWkab0XwED6e/tU2/R9eGS9NTD5VgEvnWwtQikcu0e/AO0FYyu4HpfwR3Gf2R0Btza9qxgiUNUISiLr30AP7fbyMzu7OWA803ynIzdfJ69B1EZpoVhsWMRZ8a5UVJoRoUyUlDNspxzZWiEnOXiXYiSvQOR5TnN/xsiNalmKZcy5Yr/yfB6+RZD/gbDC0IbOx8wQrMhxGGYx4lBW5X1wJBLkpO981jWf6EXogvIrm+rYYrKOn4Hgbg4b439/s8cFeVvcNwBtHBkOdWvQIdRnTxPfgCXvyEgSQQAAA=="
    }
  ]
}
```

A log event will be output with the following structure:

```json title="Example AWS CloudWatch Logs Subscription event"
{
  "request_id": "ed1d787c-b9e2-4631-92dc-8e7c9d26d804",
  "source_arn": "arn:aws:firehose:us-east-1:111111111111:deliverystream/test",
  "timestamp": "2020-09-14T19:12:40.138Z",
  "message": "{\"messageType\":\"DATA_MESSAGE\",\"owner\":\"111111111111\",\"logGroup\":\"test\",\"logStream\":\"test\",\"subscriptionFilters\":[\"Destination\"],\"logEvents\":[{\"id\":\"35683658089614582423604394983260738922885519999578275840\",\"timestamp\":1600110569039,\"message\":\"{\\\"bytes\\\":26780,\\\"datetime\\\":\\\"14/Sep/2020:11:45:41 -0400\\\",\\\"host\\\":\\\"157.130.216.193\\\",\\\"method\\\":\\\"PUT\\\",\\\"protocol\\\":\\\"HTTP/1.0\\\",\\\"referer\\\":\\\"https://www.principalcross-platform.io/markets/ubiquitous\\\",\\\"request\\\":\\\"/expedite/convergence\\\",\\\"source_type\\\":\\\"stdin\\\",\\\"status\\\":301,\\\"user-identifier\\\":\\\"-\\\"}\"},{\"id\":\"35683658089659183914001456229543810359430816722590236673\",\"timestamp\":1600110569041,\"message\":\"{\\\"bytes\\\":17707,\\\"datetime\\\":\\\"14/Sep/2020:11:45:41 -0400\\\",\\\"host\\\":\\\"109.81.244.252\\\",\\\"method\\\":\\\"GET\\\",\\\"protocol\\\":\\\"HTTP/2.0\\\",\\\"referer\\\":\\\"http://www.investormission-critical.io/24/7/vortals\\\",\\\"request\\\":\\\"/scale/functionalities/optimize\\\",\\\"source_type\\\":\\\"stdin\\\",\\\"status\\\":502,\\\"user-identifier\\\":\\\"feeney1708\\\"}\"}]}"
}
```\

You will typically want to pass forwarded CloudWatch Log events, like this, \
through through the \
[`aws_cloudwatch_logs_subscription_parser`][vector_transform_aws_cloudwatch_logs_subscription_parser]. \
"""

[sources.aws_kinesis_firehose.fields.log.fields.message]
type = "string"
examples = ["Started GET / for 127.0.0.1 at 2012-03-10 14:28:14 +0100"]
required = true
description = """\
The raw event, unaltered.\
"""

[sources.aws_kinesis_firehose.fields.log.fields.request_id]
type = "timestamp"
examples = ["ed1d787c-b9e2-4631-92dc-8e7c9d26d804"]
required = true
description = """\
The AWS Kinesis Firehose request ID, value of the `X-Amz-Firehose-Request-Id` header.\
"""

[sources.aws_kinesis_firehose.fields.log.fields.timestamp]
type = "timestamp"
examples = ["2019-11-01T21:15:47.443232Z"]
required = true
description = """\
The timestamp from the AWS Kinesis Firehose request body. \
"""

[sources.aws_kinesis_firehose.fields.log.fields.source_arn]
type = "timestamp"
examples = ["arn:aws:firehose:us-east-1:111111111111:deliverystream/test"]
required = true
description = """\
The AWS Kinises Firehose delivery stream that issued the request, value of the \
`X-Amz-Firehose-Source-Arn` header. \
"""

<%= render("_partials/fields/_tls_acceptor_options.toml", namespace: "sources.aws_kinesis_firehose.options", relevant: "") %>
